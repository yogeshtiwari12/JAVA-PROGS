public class QueueArray {

    private int[] arr;
    private int front;
    private int rear;
    private int size;
    private int capacity;

    public QueueArray(int capacity) {
        this.capacity = capacity;
        this.arr = new int[capacity];
        this.front = 0;
        this.rear = -1;
        this.size = 0;
    }

    public boolean isEmpty() {
        return size == 0;
    }

    public boolean isFull() {
        return size == capacity;
    }

    public void enqueue(int value) {
        if (isFull()) {
            System.out.println("Queue is full. Cannot enqueue " + value);
        } else {
            rear = (rear + 1) % capacity;
            arr[rear] = value;
            size++;
        }
    }

    public void dequeue() {
        if (isEmpty()) {
            System.out.println("Queue is empty. Cannot dequeue.");
        } else {
            int dequeuedValue = arr[front];
            front = (front + 1) % capacity;
            size--;
            System.out.println("Dequeued: " + dequeuedValue);
        }
    }

    public void peek() {
        if (isEmpty()) {
            System.out.println("Queue is empty. Cannot peek.");
        } else {
            System.out.println("Front: " + arr[front]);
        }
    }

    public static void main(String[] args) {
        int capacity = 5; // Change the capacity as needed
        QueueArray queue = new QueueArray(capacity);

        queue.enqueue(1);
        queue.enqueue(2);
        queue.enqueue(3);

        queue.peek();

        queue.dequeue();
        queue.dequeue();

        queue.enqueue(4);
        queue.enqueue(5);
        queue.enqueue(6);

        queue.peek();

        queue.dequeue();
        queue.dequeue();
        queue.dequeue();
        queue.dequeue();
    }
}
